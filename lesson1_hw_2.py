
######################################################
# 1.	Поработайте с переменными, создайте несколько, выведите на экран. 
# Запросите у пользователя некоторые числа и строки и сохраните в переменные, затем выведите на экран.
######################################################

a = input("Введите число или текст: ")
print(a)

############################################################################################################
# Числа
############################################################################################################
    
d0 = 10
d1 = 12.5
d2 = d0+d1        

############################################################################################################  
# Строки
############################################################################################################

s0 = 'Мама мыла раму.'
s1 = 'Папа мыл окно.'
s2 = s0 + ' ' + s1

############################################################################################################
# Список
############################################################################################################

v0 = [0, 1, 2]
v1 = ['0', '1', '2']
v2 = v0 + v1

############################################################################################################
# Словарь
############################################################################################################

dct0 = {0:'0', 1:'1'}

keys = ['k'+str(x) for x in range(5)]
values = [x/3.3 for x in range(0, 15, 3)]
dct1 = dict(zip(keys, values))

############################################################################################################
# Цикл
############################################################################################################

for key in dct1.keys():
    print(key, dct1[key])

for key in dct1.keys():
    print('key:{0}, value: {1}'.format(key, int(dct1[key])))

for key in dct1.keys():
    print('key:{}, value: {:.2}'.format(key, dct1[key]))

for key in dct1.keys():
    print(f'key: {key}, value: {dct1[key]}')
        
for key, value in dct1.items():
    print(f"{key} - {value}")


  
############################################################################################################
# 2.	Пользователь вводит время в секундах. Переведите время в часы, минуты и секунды и выведите в формате чч:мм:сс. 
# Используйте форматирование строк.
############################################################################################################
      
a = input("Введите число в секундах: ")       
# a = '3665'
a = int(a)

hours = a // 3600
scnd = a % 3600
minutes = scnd // 60
seconds = scnd % 60

print(f"{a} секунд это в формате 'чч:мм:сс' - {hours:02}:{minutes:02}:{seconds:02}")
print('{:02}:{:02}:{:02}'.format(hours, minutes, seconds))


#####################   or    #########################

a = 3665
print("The time %02d : %02d : %02d " % (a//3600, (a//3600)%60, a%60))



############################################################################################################
# 3.	Узнайте у пользователя число n. Найдите сумму чисел n + nn + nnn. 
# Например, пользователь ввёл число 3. Считаем 3 + 33 + 333 = 369.
############################################################################################################

a = input("Введите целое число n в диапазоне [0, 10)  ")       
# a = '3'

######################################################
# Ветвление
######################################################

if str(a).isdigit():
    print('Это число', a)
if not str(a).isdigit():
    print('Это не число')

#####################   or    #########################

if str(a).isdigit():
    print('Это число ' + str(a))
else: 
    print('Это не число')


for a in range(10):
    n = str(a)
    nn = n+n
    nnn = nn+n    
    res = int(n) + int(nn) + int(nnn)
    print('Сумма чисел n + nn + nnn = ', res)
    

#####################   or    #########################

a = 3
iteratorNumber = 4
nextNumber = 0
result = 0
for x in range(iteratorNumber):
    nextNumber = str(nextNumber) + str(a)
    result = result + int(nextNumber)
print(f'Result: {result}')


#####################   or    #########################

Number = 5
print("The sum of numbers %d , %d , and %d will be %d " % (Number, Number*11, Number*111, Number*123))

#####################   or    #########################

tsek = 3665
import time
data1 = time.strftime('%H:%M:%S', time.gmtime(tsek))
print('В формате чч:мм:сс ', data1)




############################################################################################################
# 4.	Пользователь вводит целое положительное число. Найдите самую большую цифру в числе. 
# Для решения используйте цикл while и арифметические операции.
############################################################################################################

a = input("Введите целое число n в диапазоне [100:]  ")
# a = '8765432'
a = str(a)

v = []
for i in range(len(a)):
    v.append(int(a[i]))

#####################   or    #########################
    
v = [int(a[x]) for x in range(len(a))]

#####################   or    #########################

v = [int(x) for x in a]

ind = v.index(max(v))

print('Самая большая цифра в числе: {} и находится на {} позиции, отсчет с нуля'.format(max(v), ind))


#####################   or    #########################

a = input("Введите целое число n: ")
v = [int(x) for x in a]
print('Самая большая цифра в числе: {}'.format(max(v)))


#####################   or    #########################

number = input("Введите любое положительное число: ")
length = len(number)
i = 0
x = number[i]
while i < length:
        if number[i] > x:
            x = number[i]
        i += 1
print(x)



############################################################################################################
# 5.	Запросите у пользователя значения выручки и издержек фирмы. Определите, с каким финансовым результатом работает фирма. 
# Например, прибыль — выручка больше издержек, или убыток — издержки больше выручки. Выведите соответствующее сообщение.
# Если фирма отработала с прибылью, вычислите рентабельность выручки. Это отношение прибыли к выручке. 
# Далее запросите численность сотрудников фирмы и определите прибыль фирмы в расчёте на одного сотрудника.
############################################################################################################

s = input("Введите значения выручки и издержек фирмы через пробел : ")
if s.count(' ') == 1:
    a, b = s.split()
else:
    print('Неправильный ввод данных. Используем для расчета 450 и 120')
    a = 450; b = 120

print("Выручка {} и издержки {} ".format(a, b))

a = int(a)
b = int(b)

if a > b:
    print('Прибыль — выручка больше издержек')
    profit = a - b # Прибыль
    profitability_of_proceeds = profit / a # рентабельность выручки
    print('Рентабельность: ', round(profitability_of_proceeds,2))
    c = input("Введите исленность сотрудников фирмы : ")
    if c != '':
        c = int(c)
        print('Прибыль фирмы в расчёте на одного сотрудника: ', round(profit/c,2))
    else:
        print('Неправильный ввод данных. Используем для расчета 10')
        c = 10
        print('Прибыль фирмы в расчёте на одного сотрудника: ', round(profit/c,2))

elif a < b:
    print('Убыток — издержки больше выручки')

else:
    print('Самоокупаемость')




############################################################################################################
# 6.	Спортсмен занимается ежедневными пробежками. В первый день его результат составил a километров. 
# Каждый день спортсмен увеличивал результат на 10 % относительно предыдущего. 
# Требуется определить номер дня, на который результат спортсмена составит не менее b километров. 
# Программа должна принимать значения параметров a и b и выводить одно натуральное число — номер дня.
############################################################################################################
import math

a, b = input("Введите значения a и b через пробел : ").split()
print("a = {} и b = {} ".format(a, b))



per = int(a)
i = 1
while per <= int(b):
    per = per + per*0.1
    i += 1
print('На {} день спортсмен достиг результата — не менее {} км.'.format(i, b))

#####################   or    #########################

N = int(math.log(int(b) / int(a), 1.1)) + 2  
per = int(a)
for i in range(1, N):
    per = per + per*0.1
    if per >= int(b):
        break
print('На {} день спортсмен достиг результата — не менее {} км.'.format(i+1, b))

